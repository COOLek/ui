ctx = '.button_theme_alfa'

$controlRadius = 6px;
$fontSize      = (12 12 14 16);
$controlSize   = (25 35 45 55);

$controlPadding  = (20 30 40 50);

{ctx} {
    font-family: 'Roboto', sans-serif;

    position: relative;
    display:  inline-block;

    padding: 0;
    margin: 0;

    user-select: none;

    border-radius: $controlRadius;

    outline: 0;

    text-align:  center;
    white-space: nowrap;

    transition: all 200ms ease;

    cursor: pointer;

    &::-moz-focus-inner
    {
        padding: 0;

        border: 0;
    }

    .button__text
    {
        overflow: hidden;

        text-overflow:  ellipsis;
        vertical-align: top;
    }

    .button__text
    {
        /*
         * These rules fixes Opera 12+ && IE 9 bug with extra top margin when pressed
         * Warning: bug still can be reproduced by clicking on button's border
         * TODO: try to fix
         */
        position: relative;
        display:  inline-block;
    }

    .button__icon
    {
        position: relative;
        vertical-align: middle;
    }

    &.button_type_link
    {
        text-decoration: none;
    }

    &.button_focused-hard
    {
        z-index: 1;
    }

    &.button_view_action
    {
        font-weight: 500;
    }

    &.button_disabled
    {

        &.button_checked
        {
            background: rgba(255,255,255,0.3);
        }

        .button__text
        {
            color: #aaa;
        }

        .icon
        {
            opacity: 0.3;
        }
    }

    > :last-child
    {
        padding-right: 0;
    }

    & .button__icon
    {
        padding-right: 10px;
    }
}

for $sizeVal, i in s m l xl {
    .button_size_{$sizeVal}
    {
        font-size: ($fontSize[i])px;

        font-size: ($fontSize[i])px;
        height: ($controlSize[i])px;
        line-height: ($controlSize[i])px - 2;

        padding: 0 ($controlPadding[i])px;
    }
}


.control-group
{
    {ctx} {
        border-radius: 0;
    }

    > {ctx}:first-child,
    > :first-child {ctx}
    {
        border-radius: $controlRadius 0 0 $controlRadius;
    }

    > {ctx}:last-child,
    > :last-child {ctx}
    {
        border-radius: 0 $controlRadius $controlRadius 0;
    }

    > :only-child {ctx}
    {
        border-radius: $controlRadius;
    }
}
